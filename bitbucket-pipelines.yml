# Bitbucket Pipelines Configuration

# Custom Docker image
image: node:16.14.2

# Definition of caches to speed up builds
definitions:
  caches:
    npm: v2-website/node_modules

pipelines:
  pull-requests:
    'feature/*':
      - step:
          name: Build and Test
          caches:
            - npm
          script:
            - node -v
            - cd v2-website
            - npm install
            - npm run build
          artifacts:
            - v2-website/build/**/*
      - step:
          name: Deploy to Test Environment
          deployment: test 
          script:
            - pipe: atlassian/aws-s3-deploy:0.3.7
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: "us-east-1"
                S3_BUCKET: "partners-dev.qrvey.com"
                LOCAL_PATH: "v2-website/build/"

  branches:
    'release/*':
    'hotfix/*':
    develop:
      - step:
          name: Build and Deploy to Staging
          caches:
            - npm
          script:
            - chmod +x build-and-deploy.sh
            - ./build-and-deploy.sh
          artifacts:
            - v2-website/build/**/*
      - step:
          name: Deploy to Staging
          deployment: staging 
          script:
            - pipe: atlassian/aws-s3-deploy:0.3.7
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: "us-east-1"
                S3_BUCKET: "partners-staging.qrvey.com"
                LOCAL_PATH: "v2-website/build/"

    master:
      - step:
          name: Deploy to Production
          caches:
            - npm
          script:
            - chmod +x build-and-deploy-prod.sh
            - ./build-and-deploy-prod.sh
          artifacts:
            - v2-website/build/**/*
      - step:
          name: Deploy Assets
          deployment: production
          script:
            - pipe: atlassian/aws-s3-deploy:0.3.7
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: "us-east-1"
                S3_BUCKET: "partners.qrvey.com"
                LOCAL_PATH: "v2-website/build/"
      - step:
          name: Invalidate Cloudfront Cache
          script:
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: "us-east-1"
                DISTRIBUTION_ID: $DISTRIBUTION_ID_PROD

# Note: The scripts build-and-deploy.sh and build-and-deploy-prod.sh should contain the appropriate commands
#       previously found in the individual steps, adjusted for each environment.
