# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:10.15.3

pipelines:
  pull-requests:
    'feature/*':
     - step:
        script:
          - node -v
          - cd website
          - npm install
          - npm run build
        artifacts:
          - website/**
     - step:
        name: Deploy
        deployment: test 
        script:
          - pipe: atlassian/aws-s3-deploy:0.3.7
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: "us-east-1"
              S3_BUCKET: "uidoc.qrvey.com"
              LOCAL_PATH: "website/build/docs-site"
    'release/*':
     - step:
        script:
          - npm install
          - npm run staging
          - cd website
          - npm install
          - npm install replace@1.0.0 -g --force
          - replace "indexName:'dev_qrvey'" "indexName:'staging_qrvey'" siteConfig.js
          - cd static/js
          - replace "MKT_METADATAID" "marketing_test" custom.js
          - cd ../..
          - npm run build
        artifacts:
          - website/**
     - step:
        name: Deploy
        deployment: staging 
        script:
          - pipe: atlassian/aws-s3-deploy:0.3.7
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: "us-east-1"
              S3_BUCKET: "partners-staging.qrvey.com"
              LOCAL_PATH: "website/build/docs-site"
    'hotfix/*':
     - step:
        script:
          - npm install
          - npm run staging
          - cd website
          - npm install
          - npm install replace@1.0.0 -g --force
          - replace "indexName:'dev_qrvey'" "indexName:'staging_qrvey'" siteConfig.js
          - cd static/js
          - replace "MKT_METADATAID" "marketing_test" custom.js
          - cd ../..
          - npm run build
        artifacts:
          - website/**
     - step:
        name: Deploy
        deployment: staging 
        script:
          - pipe: atlassian/aws-s3-deploy:0.3.7
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: "us-east-1"
              S3_BUCKET: "partners-staging.qrvey.com"
              LOCAL_PATH: "website/build/docs-site"
  branches:
    develop:
      - step:
         script:
          - npm install
          - npm run staging
          - cd website
          - npm install
          - npm install replace@1.0.0 -g --force
          - replace "indexName:'dev_qrvey'" "indexName:'staging_qrvey'" siteConfig.js
          - cd static/js
          - replace "MKT_METADATAID" "marketing_test" custom.js
          - cd ../..
          - npm run build
         artifacts:
          - website/**
      - step:
         name: Deploy
         deployment: staging 
         script:
          - pipe: atlassian/aws-s3-deploy:0.3.7
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: "us-east-1"
              S3_BUCKET: "partners-staging.qrvey.com"
              LOCAL_PATH: "website/build/docs-site"
    master:
      - step:
          name: Deploy to production
          caches:
            - node
          script:
            - npm install
            - npm run prod
            - cd website
            - npm install
            - npm install replace@1.0.0 -g --force
            - replace "indexName:'dev_qrvey'" "indexName:'prod_qrvey'" siteConfig.js
            - cd static/js
            - replace "firebaseProd = false" "firebaseProd = true"  firebase.js
            - replace "MKT_METADATAID" "marketing_prod" custom.js
            - cd ../..
            - npm run build
          artifacts:
            - website/**
      - step:
          name: Deploy
          deployment: production
          script:
            - pipe: atlassian/aws-s3-deploy:0.3.7
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: "us-east-1"
                S3_BUCKET: "partners.qrvey.com"
                LOCAL_PATH: "website/build/docs-site"
      - step:
          name: Invalidate Cloudfront Cache
          script:
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: "us-east-1"
                DISTRIBUTION_ID: $DISTRIBUTION_ID_PROD
